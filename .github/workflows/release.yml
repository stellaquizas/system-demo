name: Release Management

on:
  push:
    tags:
      - "v*.*.*"
    branches:
      - "release/**"

jobs:
  validate-release-branch:
    if: startsWith(github.ref, 'refs/heads/release/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Extract version from branch name
        id: get_version
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/release/}
          echo "VERSION=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "Release branch for version $BRANCH_NAME detected"

      - name: Validate CHANGELOG.md
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          if grep -q "## \[$VERSION\]" CHANGELOG.md; then
            echo "✅ CHANGELOG.md contains entry for version $VERSION"
          else
            echo "❌ CHANGELOG.md does not contain entry for version $VERSION"
            exit 1
          fi

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Extract release notes from CHANGELOG.md
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          echo "Generating release notes for version $VERSION"
          # Extract content between the version header and the next header
          sed -n "/## \[$VERSION\]/,/## \[/p" CHANGELOG.md | sed '$d' > RELEASE_NOTES.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          body_file: RELEASE_NOTES.md
          files: |
            VERSION.txt
            CHANGELOG.md
          name: "Release v${{ steps.get_version.outputs.VERSION }}"
